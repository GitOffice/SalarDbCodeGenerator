<?xml version="1.0" encoding="utf-8" ?>
<PatternFile>
	<Name>Database Entity Objects</Name>
	<Description>Entity objects pattern</Description>
	<Options
		Group="Database Model"
		AppliesTo="TablesAndViewsAll"
		Overwrite="true"
		FilePath="Entities\Principal\EntityObjects.cs"
		Language="C#"
		/>
	<BaseContent>
		<![CDATA[using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using [:Namespace:].DataAnnotations;
using [:Namespace:].Base;

namespace [:Namespace:].Entities
{
[#TablesAndViewsContent#]
}
]]>
	</BaseContent>

	<PatternContent Name="TablesAndViewsContent" ConditionKeyMode="TablesAndViewsAll">
		<BaseContent>[:InnerContent:]</BaseContent>
		<Condition Key="TheReplacement">
			<![CDATA[
	[DataContract]
	[MetadataType(typeof([:TableName:]Meta))]
	[Table("[:TableNameDb:]")]
	public partial class [:TableName:] : [:DatabaseName:]BaseEntity
	{
		static [:TableName:]()
		{
			// Console, WPF, regular asp.net, don't respect the MetadataType attribute and
			// the user has to register the provider himself.
			TypeDescriptor.AddProviderTransparent(
				new AssociatedMetadataTypeTypeDescriptionProvider(typeof([:TableName:]), typeof([:TableName:]Meta)), typeof([:TableName:]));
		}
[#FieldsProperties#]
[#ForeignKeys#]
[#IndexConstraintKeys#]
[#UniqueConstraintKeys#]
	}
]]>
		</Condition>
		<ConditionContents>
			<PatternContent Name="ForeignKeys" ConditionKeyMode="FieldsForeignKeyAll">
				<Condition Key="MultiplicityOne">
					<![CDATA[
		/// <summary>
		/// [:ForeignTableNameDb:] - [:LocalFieldNameDb:]
		/// </summary>
		[DisplayName("[:ForeignTableNameDb:]")]
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		[ForeignKey("[:LocalFieldName:]")]
		public virtual [:ForeignTableName:] [:ForeignTableNameAsField:] { get; set; }
]]>
				</Condition>
				<Condition Key="MultiplicityMany">
					<![CDATA[
		/// <summary>
		/// [:ForeignTableNameDb:] - [:ForeignFieldNameDb:]
		/// </summary>
		[DisplayName("[:ForeignTableNameDb:]")]
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		[ForeignKey("[:ForeignFieldName:]")]
		public virtual IList<[:ForeignTableName:]> [:ForeignTableNameAsField:] { get; set; }
]]>
				</Condition>
			</PatternContent>

			<PatternContent Name="FieldsProperties" ConditionKeyMode="FieldsKeyTypeAll">
				<Condition Key="AutoInrcementPrimaryKey">
					<![CDATA[
		/// <summary>
		/// [:FieldDescription:]
		/// </summary>
		[DisplayName("[:FieldDescription:]")]
		[DataMember]
		[Key]
		[DatabaseGenerated(DatabaseGeneratedOption.Identity)]
		[Column("[:FieldNameDb:]", Order = [:FieldOrdinalValue:])]
		public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
				</Condition>
				<Condition Key="AutoInrcement">
					<![CDATA[
		/// <summary>
		/// [:FieldDescription:]
		/// </summary>
		[DisplayName("[:FieldDescription:]")]
		[DataMember]
		[DatabaseGenerated(DatabaseGeneratedOption.Identity)]
		[Column("[:FieldNameDb:]")]
		public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
				</Condition>
				<Condition Key="AutoIncNativeNullable">
					<![CDATA[
		/// <summary>
		/// [:FieldDescription:]
		/// </summary>
		[DisplayName("[:FieldDescription:]")]
		[DataMember]
		[DatabaseGenerated(DatabaseGeneratedOption.Identity)]
		[Column("[:FieldNameDb:]")]
		public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
				</Condition>
				<Condition Key="AutoIncNullableType">
					<![CDATA[
		/// <summary>
		/// [:FieldDescription:]
		/// </summary>
		[DisplayName("[:FieldDescription:]")]
		[DataMember]
		[DatabaseGenerated(DatabaseGeneratedOption.Identity)]
		[Column("[:FieldNameDb:]")]
		public [:FieldDotNetType:]? [:FieldName:] { get; set; }
]]>
				</Condition>
				<Condition Key="PrimaryKey">
					<![CDATA[
		/// <summary>
		/// [:FieldDescription:]
		/// </summary>
		[DisplayName("[:FieldDescription:]")]
		[DataMember]
		[Key]
		[Column("[:FieldNameDb:]", Order = [:FieldOrdinalValue:])]
		public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
				</Condition>
				<Condition Key="NormalField">
					<![CDATA[
		/// <summary>
		/// [:FieldDescription:]
		/// </summary>
		[DisplayName("[:FieldDescription:]")]
		[DataMember]
		[Column("[:FieldNameDb:]")]
		public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
				</Condition>
				<Condition Key="NativeNullable">
					<![CDATA[
		/// <summary>
		/// [:FieldDescription:]
		/// </summary>
		[DisplayName("[:FieldDescription:]")]
		[DataMember]
		[Column("[:FieldNameDb:]")]
		public [:FieldDotNetType:] [:FieldName:] { get; set; }
]]>
				</Condition>
				<Condition Key="NullableType">
					<![CDATA[
		/// <summary>
		/// [:FieldDescription:]
		/// </summary>
		[DisplayName("[:FieldDescription:]")]
		[DataMember]
		[Column("[:FieldNameDb:]")]
		public [:FieldDotNetType:]? [:FieldName:] { get; set; }
]]>
				</Condition>
			</PatternContent>

			<PatternContent Name="IndexConstraintKeys" ConditionKeyMode="TableIndexConstraint">
				<Condition Key="NormalKey"></Condition>
			</PatternContent>

			<PatternContent Name="UniqueConstraintKeys" ConditionKeyMode="TableUniqueConstraint">
				<Condition Key="NormalKey"></Condition>
			</PatternContent>
		</ConditionContents>
	</PatternContent>
</PatternFile>
